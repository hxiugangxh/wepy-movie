<template>
  <view class="container">
    <image class="head-image" src="/images/music/music-stop.png"></image>
    <image catchtap="onMusicTap" class="audio"
           src="{{isPlayingMusic? '/images/music/music-stop.png': '/images/music/music-start.png'}}"></image>
    <view class="author-date">
      <image class="avatar" src="/images/music/music-stop.png"></image>
      <text class="author">{{postData.author}}</text>
      <text class="const-text">发表于</text>
      <text class="date">{{postData.dateTime}}</text>
    </view>
    <text class="title">{{postData.title}}</text>
    <view class="tool">
      <view class="circle-img">
        <image wx:if="{{collected}}" catchtap="onColletionTap" src="/images/icon/collection.png"></image>
        <image wx:else catchtap="onColletionTap" src="/images/icon/collection-anti.png"></image>
        <image catchtap="onShareTap" class="share-img" src="/images/icon/share.png"></image>
      </view>
      <view class="horizon"></view>
    </view>
    <text class="detail">{{postData.detail}}</text>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import postsData from '../../../data/posts-data'

  export default class PostsDetail extends wepy.page {
    config = {
      navigationBarTitleText: '电影详情'
    }

    components = {}

    data = {
      isPlayingMusic: true,
      collected: false,
      currentPostId: null,
      postData: {}
    }

    methods = {
      onMusicTap: function () {
        this.dealBackgroundMusic()
      },
      onColletionTap() {
        let id = this.currentPostId

        let postsCollected = wepy.getStorageSync('posts_collected')
        let postCollected = postsCollected[id]
        postCollected = !postCollected
        postsCollected[id] = postCollected

        this.collected = postCollected

        this.$apply()

        wepy.setStorageSync('posts_collected', postsCollected)
      },
      onShareTap() {
        let itemList = [
          '分享给微信好友',
          '分享到朋友圈',
          '分享到QQ',
          '分享到微博'
        ]
        wepy.showActionSheet({
          itemList: itemList,
          itemColor: '#405f80',
          success: function (res) {
            // res.cancel 用户是不是点击了取消按钮
            // res.tapIndex 数组元素的序号，从0开始
            wepy.showModal({
              title: '用户' + ((itemList[res.tapIndex]) ? itemList[res.tapIndex] : '取消'),
              content: '用户是否取消？' + res.cancel + '现在无法实现分享功能，什么时候能支持呢'
            })
          }
        })
      }
    }

    dealBackgroundMusic() {
      let isPlayingMusic = this.isPlayingMusic
      isPlayingMusic = !isPlayingMusic
      this.isPlayingMusic = isPlayingMusic

      let postData = this.postData
      if (isPlayingMusic) {
        wepy.playBackgroundAudio({
          dataUrl: postData.music.url,
          title: postData.music.title,
          coverImgUrl: postData.music.coverImg
        })

        this.$parent.globalData.backgroundMusicId = this.postData.postId
        this.$parent.globalData.isPlayingMusic = true
      } else {
        wepy.pauseBackgroundAudio()
        this.$parent.globalData.backgroundMusicId = null
        this.$parent.globalData.isPlayingMusic = false
      }
    }

    async onLoad(params) {
      let postId = params.id
      this.currentPostId = postId
      this.postData = postsData.postList[postId]

      let postsCollected = wepy.getStorageSync('posts_collected')
      if (postsCollected) {
        let postCollected = postsCollected[postId]
        this.collected = postCollected
      } else {
        let postsCollected = {}
        postsCollected[postId] = false
        wepy.setStorageSync('posts_collected', postsCollected)
      }

      let postData = this.postData

      wepy.playBackgroundAudio({
        dataUrl: postData.music.url,
        title: postData.music.title,
        coverImgUrl: postData.music.coverImg
      })

      wepy.onBackgroundAudioPlay(() => {
        this.isPlayingMusic = true
        this.$parent.globalData.isPlayingMusic = true
        this.$apply()
      })

      wepy.onBackgroundAudioPause(() => {
        this.isPlayingMusic = false
        this.$parent.globalData.isPlayingMusic = false
        this.$apply()
      })
    }
  }
</script>

<style lang="scss">
  @import "../../../styles/variable.scss";

  .container {
    display: flex;
    flex-direction: column;
  }

  .head-image {
    width: 100%;
    height: rpx(460);
  }

  .hide {
    opacity: 0;
  }

  .audio {
    width: rpx(102);
    height: rpx(110);
    position: absolute;
    left: 50%;
    margin-left: rpx(-51);
    top: rpx(180);
    opacity: 0.6;
  }

  .author-date {
    flex-direction: row;
    margin-left: rpx(30);
    margin-top: rpx(20);
  }

  .avatar {
    height: rpx(64);
    width: rpx(64);
    vertical-align: middle;
  }

  .author {
    font-size: rpx(30);
    font-weight: 300;
    margin-left: rpx(20);
    vertical-align: middle;
    color: #666;
  }

  .const-text {
    font-size: rpx(24);
    color: #999;
    margin-left: rpx(20);
  }

  .date {
    font-size: rpx(24);
    margin-left: rpx(30);
    vertical-align: middle;
    color: #999;
  }

  .title {
    margin-left: rpx(40);
    font-size: rpx(36);
    font-weight: 700;
    margin-top: rpx(30);
    letter-spacing: 2px;
    color: #4b556c;
  }

  .tool {
    margin-top: rpx(20);
  }

  .circle-img {
    float: right;
    margin-right: rpx(40);
    vertical-align: middle;
  }

  .circle-img Image {
    width: rpx(90);
    height: rpx(90);
  }

  .share-img {
    margin-left: rpx(30);
  }

  .horizon {
    width: rpx(660);
    height: 1px;
    background-color: #e5e5e5;
    vertical-align: middle;
    position: relative;
    top: rpx(46);
    margin: 0 auto;
    z-index: -99;
  }

  .detail {
    color: #666;
    margin-left: rpx(30);
    margin-top: rpx(20);
    margin-right: rpx(30);
    line-height: rpx(44);
    letter-spacing: 2px;
  }
</style>
