<template>
  <view class="search">
    <icon type="search" size="13"></icon>
    <input placeholder="请输入电影名称" bindfocus="onFocus" bindconfirm="query" placeholder-class="placeholder"/>
    <image src="/images/icon/xx.png" wx:if="{{isSearch}}" catchtap="closeSearch"/>
  </view>

  <view class="container" wx:if="{{!isSearch}}">
    <repeat for="{{topicMovieList}}" item="movieList">
      <view class="movies-template">
        <movieList :moiveList="movieList"></movieList>
      </view>
    </repeat>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import MovieList from '../../components/movie-list'
  import util from '../../utils/util'

  export default class Movie extends wepy.page {
    config = {
      navigationBarTitleText: '电影'
    }

    components = {
      movieList: MovieList
    }

    data = {
      topicMovieList: [],
      inTheaters: {},
      comingSoon: {},
      top250: {},
      isSearch: false,
      searchMovies: {}
    }

    methods = {}

    async onLoad() {
      let doubanBase = this.$parent.globalData.doubanBase

      let inThreaterUrl = doubanBase + '/v2/movie/in_theaters' + '?start=0&count=3'
      let cominSoonUrl = doubanBase + '/v2/movie/coming_soon' + '?start=0&count=3'
      let top250Url = doubanBase + '/v2/movie/top250' + '?start=0&count=3'

      let inThreater = wepy.getStorageSync('inThreater')
      let cominSoon = wepy.getStorageSync('cominSoon')
      let top250 = wepy.getStorageSync('top250')

      if (inThreater === '') {
        this.getMovieListData(inThreaterUrl, 'inThreater', '正在热映')
      } else {
        this.topicMovieList.push(inThreater)
      }

      if (cominSoon === '') {
        this.getMovieListData(cominSoonUrl, 'cominSoon', '即将上映')
      } else {
        this.topicMovieList.push(cominSoon)
      }

      if (top250 === '') {
        this.getMovieListData(top250Url, 'top250', 'Top250')
      } else {
        this.topicMovieList.push(top250)
      }

      console.log(this.topicMovieList)
    }

    getMovieListData(url, key, myTitle) {
      let that = this
      wepy.request({
        url: url,
        data: {},
        method: 'GET',
        header: {
          'Content-Type': 'json'
        },
        success: function (res) {
          console.log('请求成功')
          console.log(res)
          that.processDoubanData(res.data, key, myTitle)
        },
        fail: function () {
          console.log('请求失败')
        }
      })
    }

    processDoubanData(movieDouban, key, myTitle) {
      let movies = []

      for (let index in movieDouban.subjects) {
        let subject = movieDouban.subjects[index]

        let title = subject.title
        if (title.length > 6) {
          title = title.substring(0, 6) + '...'
        }

        var temp = {
          stars: util.convertToStarsArray(subject.rating.stars),
          title: title,
          average: subject.rating.average,
          converageUrl: subject.images.large,
          movieId: subject.id
        }

        movies.push(temp)
      }
      this.topicMovieList.push({
        title: myTitle,
        movies: movies
      })

      this.$apply()

      wepy.setStorageSync(key, {title: myTitle, movies: movies})
    }
  }
</script>

<style lang="scss">
  @import "../../styles/variable.scss";

  .container {
    background-color: #f2f2f2;
    margin-bottom: rpx(200)
  }

  .movies-template {
    margin-bottom: rpx(15);
  }

  .search-container {
    height: rpx(80);
    width: 100%;
    background-color: #f2f2f2;
  }

  .search {
    background-color: #f2f2f2;
    height: rpx(80);
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    margin: rpx(5) rpx(20) 0 rpx(20);
  }

  .search icon {
    margin-left: rpx(10);
  }

  .placeholder {
    background-color: #f2f2f2;
    font-size: 14px;
    color: #d1d1d1;
    margin-left: rpx(20);
  }

  .search input {
    height: 100%;
    width: rpx(625);
    font-size: rpx(28);
    margin-left: rpx(20);
  }

  .search image {
    height: rpx(30);
    width: rpx(30);
    margin: auto 0 auto rpx(10);
  }
</style>
